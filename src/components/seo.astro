---
import type { SeoMetadata } from '../types/seo';
import { SeoService } from '../services/seo_service';
import { seoConfig } from '../services/seo_config';
import MetaTags from './seo/meta_tags.astro';
import StructuredData from './seo/structured_data.astro';
import PerformanceHints from './seo/performance_hints.astro';

export interface Props extends Partial<SeoMetadata> {}

// Use the service layer to merge and validate SEO data
const seoData = SeoService.mergeSeoData(Astro.props);

// Get the full image URL
const fullImageUrl = seoData.image?.startsWith('http')
  ? seoData.image
  : `${seoConfig.siteUrl}${seoData.image}`;

// Get the canonical URL, using current page path if not provided
const fullCanonicalUrl = seoData.canonicalUrl || `${seoConfig.siteUrl}${Astro.url.pathname}`;

// Validate SEO data in development
if (import.meta.env.DEV) {
  const validationErrors = SeoService.validateSeoData(seoData);
  if (validationErrors.length > 0) {
    console.warn('SEO Validation Issues:', validationErrors);
  }
}
---

<MetaTags
  title={seoData.title!}
  description={seoData.description!}
  keywords={seoData.keywords!}
  author={seoData.author!}
  canonicalUrl={fullCanonicalUrl}
  imageUrl={fullImageUrl}
  imageAlt={seoData.imageAlt!}
  type={seoData.type!}
  publishedTime={seoData.publishedTime}
  modifiedTime={seoData.modifiedTime}
  twitterHandle={seoConfig.twitterHandle}
  siteName={seoConfig.siteName}
/>

{seoData.schema && <StructuredData schema={seoData.schema} />}

<PerformanceHints />
